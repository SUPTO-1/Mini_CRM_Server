// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  name      String
  email     String   @unique
  phone     String
  location  String
  password  String
  createdAt DateTime @default(now())
  projects Project[]
  interactions Interaction[]
  reminders Reminder[]
}

model Client {
  id        Int      @id @default(autoincrement())
  name      String
  phone     String
  email     String   @unique
  company   String?
  notes     String?
  createdAt DateTime @default(now())
  userId    Int
  projects Project[]
  interactions Interaction[]
  reminders Reminder[]
}

model Project {
  id        Int      @id @default(autoincrement())
  title     String   @db.VarChar(255)
  budget    Float
  deadline  DateTime
  status    String   @db.VarChar(50)
  createdAt DateTime @default(now())
  userId    Int
  clientId  Int
  user   User   @relation(fields: [userId], references: [id])
  client Client @relation(fields: [clientId], references: [id])
  interactions Interaction[]
  reminders Reminder[]
}

enum InteractionType {
  CALL
  MEETING
  EMAIL
}

model Interaction {
  id          Int             @id @default(autoincrement())
  date        DateTime
  type        InteractionType
  notes       String
  createdAt   DateTime        @default(now())
  userId      Int
  clientId    Int?
  projectId   Int?
  
  user      User     @relation(fields: [userId], references: [id])
  client    Client?  @relation(fields: [clientId], references: [id])
  project   Project? @relation(fields: [projectId], references: [id])
}
enum ReminderStatus {
  PENDING
  COMPLETED
}

model Reminder {
  id          Int       @id @default(autoincrement())
  title       String
  dueDate     DateTime
  notes       String?
  status      ReminderStatus @default(PENDING)
  createdAt   DateTime  @default(now())
  userId      Int
  clientId    Int?
  projectId   Int?
  
  user      User     @relation(fields: [userId], references: [id])
  client    Client?  @relation(fields: [clientId], references: [id])
  project   Project? @relation(fields: [projectId], references: [id])
}